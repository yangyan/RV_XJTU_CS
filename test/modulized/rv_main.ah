#ifndef MAIN_HPP
#define MAIN_HPP

#include    "./rv_aspects.ah"

using namespace std;

//这里添加对解决函数的声明
extern int solution_skipfree(vector<string> &);
extern int solution_free(vector<string> &);

//这里对程序的名称进行设定，并添加解决方案
aspect MyStartStopEventManager:public StartStopEventManagerAspect
{
    MyStartStopEventManager():
        StartStopEventManagerAspect("test") {}

    void add_solver()
    {
        ADD_SOLVER(solution_skipfree);
        ADD_SOLVER(solution_free);
    }
};

//这里添加作用域事件
aspect Often:public BeginEndAspect
{
    Often():
        BeginEndAspect("often") { }

    pointcut functions() = "void often(int)";
};


//以下添加函数事件
aspect Malloc:public EventAspect
{
    pointcut functions() = "% malloc(...)";

    Malloc():
        EventAspect("malloc") { }

    advice CALL:after()
    {
        void **pp = RETURN_P;
        cout << "mallocing..." << *pp << endl;

        SET_EVENT_F_NAME;
        ADD_EVENT_ARG("%d", *pp);
        PUBLISH_EVENT;
    }

};

extern int skipfree;
aspect Free:public EventAspect
{
    pointcut functions() = "% free(...)";

    Free():
        EventAspect("free"){};

    advice CALL:around()
    {
        void **pp = (void **)ARG0_P;
        cout << "freeing..." << *pp << endl;

        SET_EVENT_F_NAME;
        ADD_EVENT_ARG("%d", *pp);
        PUBLISH_EVENT;

        if(skipfree == false)
            DO_THIS_FUNCTION;
    }
};

//最后添加其他事件

#endif
